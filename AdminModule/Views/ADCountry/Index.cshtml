@model IEnumerable<IntegrationModule.ResponseModels.CountryResponse>

@{
    ViewData["Title"] = "List of countries";
}

<h1>List of countries</h1>

<table class="table table-striped table-hover table-bordered">
    <thead class="text-center">
        <tr>
            <th>Code</th>
            <th>Name</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null)
        {
            foreach (var item in Model)
            {
                <tr class="text-center">
                    <td>@item.Code</td>
                    <td>@item.Name</td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="3" class="text-center">No countries found.</td>
            </tr>
        }
    </tbody>
</table>

<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
        <li class="page-item" id="previousPage">
            <a class="page-link" aria-label="Previous">
                <span aria-hidden="true">Previous</span>
            </a>
        </li>
        <!-- Add page number buttons here -->
        <li class="page-item" id="nextPage">
            <a class="page-link" aria-label="Next">
                <span aria-hidden="true">Next</span>
            </a>
        </li>
    </ul>
</nav>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var currentPage = new URLSearchParams(window.location.search).get('page') || 1;
        currentPage = parseInt(currentPage, 10);

        var previousPageItem = document.getElementById('previousPage');
        var nextPageItem = document.getElementById('nextPage');

        previousPageItem.querySelector('a').href = '?page=' + Math.max(1, currentPage - 1);
        nextPageItem.querySelector('a').href = '?page=' + (currentPage + 1);

        previousPageItem.classList.toggle('disabled', currentPage === 1);
    });
</script>